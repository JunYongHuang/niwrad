// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rpc.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Net.Rpc {

  /// <summary>Holder for reflection information generated from rpc.proto</summary>
  public static partial class RpcReflection {

    #region Descriptor
    /// <summary>File descriptor for rpc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RpcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglycGMucHJvdG8SEW5ha2FtYS5uaXdyYWQucnBjIocBChJDcmVhdGVNYXRj",
            "aFJlcXVlc3QSEQoJd29ya2VyX2lkGAEgASgJEhIKCm1hdGNoX3R5cGUYAiAB",
            "KAkSDAoEc2VlZBgDIAEoAxI8Cg1jb25maWd1cmF0aW9uGAQgASgLMiUubmFr",
            "YW1hLm5pd3JhZC5ycGMuTWF0Y2hDb25maWd1cmF0aW9uImcKE0NyZWF0ZU1h",
            "dGNoUmVzcG9uc2USEAoIbWF0Y2hfaWQYASABKAkSPgoGcmVzdWx0GAIgASgO",
            "Mi4ubmFrYW1hLm5pd3JhZC5ycGMuQ3JlYXRlTWF0Y2hDb21wbGV0aW9uUmVz",
            "dWx0IlsKEk1hdGNoQ29uZmlndXJhdGlvbhIUCgx0ZXJyYWluX3NpemUYASAB",
            "KAUSFwoPaW5pdGlhbF9hbmltYWxzGAIgASgFEhYKDmluaXRpYWxfcGxhbnRz",
            "GAMgASgFIlAKEFJ1blNlcnZlclJlcXVlc3QSPAoNY29uZmlndXJhdGlvbhgB",
            "IAEoCzIlLm5ha2FtYS5uaXdyYWQucnBjLk1hdGNoQ29uZmlndXJhdGlvbiJR",
            "ChFSdW5TZXJ2ZXJSZXNwb25zZRI8CgZyZXN1bHQYASABKA4yLC5uYWthbWEu",
            "bml3cmFkLnJwYy5SdW5TZXJ2ZXJDb21wbGV0aW9uUmVzdWx0IiUKEVN0b3BT",
            "ZXJ2ZXJSZXF1ZXN0EhAKCG1hdGNoX2lkGAEgASgJIlMKElN0b3BTZXJ2ZXJS",
            "ZXNwb25zZRI9CgZyZXN1bHQYASABKA4yLS5uYWthbWEubml3cmFkLnJwYy5T",
            "dG9wU2VydmVyQ29tcGxldGlvblJlc3VsdCJwCgtVbml0eVNlcnZlchIRCgl3",
            "b3JrZXJfaWQYASABKAkSEAoIbWF0Y2hfaWQYAiABKAkSPAoNY29uZmlndXJh",
            "dGlvbhgDIAEoCzIlLm5ha2FtYS5uaXdyYWQucnBjLk1hdGNoQ29uZmlndXJh",
            "dGlvbiIhCgRVc2VyEhkKEXNlcnZlcnNfd29ya2VyX2lkGAEgAygJKp8EChtD",
            "cmVhdGVNYXRjaENvbXBsZXRpb25SZXN1bHQSNQoxY3JlYXRlTWF0Y2hDb21w",
            "bGV0aW9uUmVzdWx0VW5rbm93bkludGVybmFsRmFpbHVyZRAAEigKJGNyZWF0",
            "ZU1hdGNoQ29tcGxldGlvblJlc3VsdFN1Y2NlZWRlZBABEjwKL2NyZWF0ZU1h",
            "dGNoQ29tcGxldGlvblJlc3VsdFVua25vd25DbGllbnRGYWlsdXJlEJz/////",
            "/////wESRQo4Y3JlYXRlTWF0Y2hDb21wbGV0aW9uUmVzdWx0QWxyZWFkeUlu",
            "TWF0Y2hPZlNwZWNpZmllZFR5cGUQnf//////////ARI8Ci9jcmVhdGVNYXRj",
            "aENvbXBsZXRpb25SZXN1bHRBbHJlYWR5Q3JlYXRpbmdNYXRjaBCe////////",
            "//8BEjYKKWNyZWF0ZU1hdGNoQ29tcGxldGlvblJlc3VsdEFscmVhZHlJbk1h",
            "dGNoEJ///////////wESPQowY3JlYXRlTWF0Y2hDb21wbGV0aW9uUmVzdWx0",
            "RmFpbGVkVG9DcmVhdGVNdWNSb29tEKD//////////wESMgolY3JlYXRlTWF0",
            "Y2hDb21wbGV0aW9uUmVzdWx0Tm9SZXNwb25zZRCh//////////8BEjEKJGNy",
            "ZWF0ZU1hdGNoQ29tcGxldGlvblJlc3VsdExvZ2dlZE91dBCi//////////8B",
            "KngKGVJ1blNlcnZlckNvbXBsZXRpb25SZXN1bHQSMwovcnVuU2VydmVyQ29t",
            "cGxldGlvblJlc3VsdFVua25vd25JbnRlcm5hbEZhaWx1cmUQABImCiJydW5T",
            "ZXJ2ZXJDb21wbGV0aW9uUmVzdWx0U3VjY2VlZGVkEAEqewoaU3RvcFNlcnZl",
            "ckNvbXBsZXRpb25SZXN1bHQSNAowc3RvcFNlcnZlckNvbXBsZXRpb25SZXN1",
            "bHRVbmtub3duSW50ZXJuYWxGYWlsdXJlEAASJwojc3RvcFNlcnZlckNvbXBs",
            "ZXRpb25SZXN1bHRTdWNjZWVkZWQQAUIhWhVuYWthbWEvbml3cmFkL3JwYzty",
            "cGOqAgdOZXQuUnBjYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Net.Rpc.CreateMatchCompletionResult), typeof(global::Net.Rpc.RunServerCompletionResult), typeof(global::Net.Rpc.StopServerCompletionResult), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Rpc.CreateMatchRequest), global::Net.Rpc.CreateMatchRequest.Parser, new[]{ "WorkerId", "MatchType", "Seed", "Configuration" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Rpc.CreateMatchResponse), global::Net.Rpc.CreateMatchResponse.Parser, new[]{ "MatchId", "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Rpc.MatchConfiguration), global::Net.Rpc.MatchConfiguration.Parser, new[]{ "TerrainSize", "InitialAnimals", "InitialPlants" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Rpc.RunServerRequest), global::Net.Rpc.RunServerRequest.Parser, new[]{ "Configuration" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Rpc.RunServerResponse), global::Net.Rpc.RunServerResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Rpc.StopServerRequest), global::Net.Rpc.StopServerRequest.Parser, new[]{ "MatchId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Rpc.StopServerResponse), global::Net.Rpc.StopServerResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Rpc.UnityServer), global::Net.Rpc.UnityServer.Parser, new[]{ "WorkerId", "MatchId", "Configuration" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Rpc.User), global::Net.Rpc.User.Parser, new[]{ "ServersWorkerId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CreateMatchCompletionResult {
    [pbr::OriginalName("createMatchCompletionResultUnknownInternalFailure")] UnknownInternalFailure = 0,
    [pbr::OriginalName("createMatchCompletionResultSucceeded")] Succeeded = 1,
    [pbr::OriginalName("createMatchCompletionResultUnknownClientFailure")] UnknownClientFailure = -100,
    [pbr::OriginalName("createMatchCompletionResultAlreadyInMatchOfSpecifiedType")] AlreadyInMatchOfSpecifiedType = -99,
    [pbr::OriginalName("createMatchCompletionResultAlreadyCreatingMatch")] AlreadyCreatingMatch = -98,
    [pbr::OriginalName("createMatchCompletionResultAlreadyInMatch")] AlreadyInMatch = -97,
    [pbr::OriginalName("createMatchCompletionResultFailedToCreateMucRoom")] FailedToCreateMucRoom = -96,
    [pbr::OriginalName("createMatchCompletionResultNoResponse")] NoResponse = -95,
    [pbr::OriginalName("createMatchCompletionResultLoggedOut")] LoggedOut = -94,
  }

  public enum RunServerCompletionResult {
    [pbr::OriginalName("runServerCompletionResultUnknownInternalFailure")] UnknownInternalFailure = 0,
    [pbr::OriginalName("runServerCompletionResultSucceeded")] Succeeded = 1,
  }

  public enum StopServerCompletionResult {
    [pbr::OriginalName("stopServerCompletionResultUnknownInternalFailure")] UnknownInternalFailure = 0,
    [pbr::OriginalName("stopServerCompletionResultSucceeded")] Succeeded = 1,
  }

  #endregion

  #region Messages
  public sealed partial class CreateMatchRequest : pb::IMessage<CreateMatchRequest> {
    private static readonly pb::MessageParser<CreateMatchRequest> _parser = new pb::MessageParser<CreateMatchRequest>(() => new CreateMatchRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateMatchRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Rpc.RpcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMatchRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMatchRequest(CreateMatchRequest other) : this() {
      workerId_ = other.workerId_;
      matchType_ = other.matchType_;
      seed_ = other.seed_;
      configuration_ = other.configuration_ != null ? other.configuration_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMatchRequest Clone() {
      return new CreateMatchRequest(this);
    }

    /// <summary>Field number for the "worker_id" field.</summary>
    public const int WorkerIdFieldNumber = 1;
    private string workerId_ = "";
    /// <summary>
    /// e.g. process / k8s deployment ...
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorkerId {
      get { return workerId_; }
      set {
        workerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "match_type" field.</summary>
    public const int MatchTypeFieldNumber = 2;
    private string matchType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MatchType {
      get { return matchType_; }
      set {
        matchType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "seed" field.</summary>
    public const int SeedFieldNumber = 3;
    private long seed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Seed {
      get { return seed_; }
      set {
        seed_ = value;
      }
    }

    /// <summary>Field number for the "configuration" field.</summary>
    public const int ConfigurationFieldNumber = 4;
    private global::Net.Rpc.MatchConfiguration configuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Rpc.MatchConfiguration Configuration {
      get { return configuration_; }
      set {
        configuration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateMatchRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateMatchRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorkerId != other.WorkerId) return false;
      if (MatchType != other.MatchType) return false;
      if (Seed != other.Seed) return false;
      if (!object.Equals(Configuration, other.Configuration)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WorkerId.Length != 0) hash ^= WorkerId.GetHashCode();
      if (MatchType.Length != 0) hash ^= MatchType.GetHashCode();
      if (Seed != 0L) hash ^= Seed.GetHashCode();
      if (configuration_ != null) hash ^= Configuration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WorkerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WorkerId);
      }
      if (MatchType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MatchType);
      }
      if (Seed != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Seed);
      }
      if (configuration_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Configuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WorkerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkerId);
      }
      if (MatchType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MatchType);
      }
      if (Seed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Seed);
      }
      if (configuration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Configuration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateMatchRequest other) {
      if (other == null) {
        return;
      }
      if (other.WorkerId.Length != 0) {
        WorkerId = other.WorkerId;
      }
      if (other.MatchType.Length != 0) {
        MatchType = other.MatchType;
      }
      if (other.Seed != 0L) {
        Seed = other.Seed;
      }
      if (other.configuration_ != null) {
        if (configuration_ == null) {
          Configuration = new global::Net.Rpc.MatchConfiguration();
        }
        Configuration.MergeFrom(other.Configuration);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WorkerId = input.ReadString();
            break;
          }
          case 18: {
            MatchType = input.ReadString();
            break;
          }
          case 24: {
            Seed = input.ReadInt64();
            break;
          }
          case 34: {
            if (configuration_ == null) {
              Configuration = new global::Net.Rpc.MatchConfiguration();
            }
            input.ReadMessage(Configuration);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateMatchResponse : pb::IMessage<CreateMatchResponse> {
    private static readonly pb::MessageParser<CreateMatchResponse> _parser = new pb::MessageParser<CreateMatchResponse>(() => new CreateMatchResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateMatchResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Rpc.RpcReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMatchResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMatchResponse(CreateMatchResponse other) : this() {
      matchId_ = other.matchId_;
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMatchResponse Clone() {
      return new CreateMatchResponse(this);
    }

    /// <summary>Field number for the "match_id" field.</summary>
    public const int MatchIdFieldNumber = 1;
    private string matchId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MatchId {
      get { return matchId_; }
      set {
        matchId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::Net.Rpc.CreateMatchCompletionResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Rpc.CreateMatchCompletionResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateMatchResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateMatchResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MatchId != other.MatchId) return false;
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MatchId.Length != 0) hash ^= MatchId.GetHashCode();
      if (Result != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MatchId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MatchId);
      }
      if (Result != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MatchId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MatchId);
      }
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateMatchResponse other) {
      if (other == null) {
        return;
      }
      if (other.MatchId.Length != 0) {
        MatchId = other.MatchId;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MatchId = input.ReadString();
            break;
          }
          case 16: {
            Result = (global::Net.Rpc.CreateMatchCompletionResult) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MatchConfiguration : pb::IMessage<MatchConfiguration> {
    private static readonly pb::MessageParser<MatchConfiguration> _parser = new pb::MessageParser<MatchConfiguration>(() => new MatchConfiguration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatchConfiguration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Rpc.RpcReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchConfiguration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchConfiguration(MatchConfiguration other) : this() {
      terrainSize_ = other.terrainSize_;
      initialAnimals_ = other.initialAnimals_;
      initialPlants_ = other.initialPlants_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchConfiguration Clone() {
      return new MatchConfiguration(this);
    }

    /// <summary>Field number for the "terrain_size" field.</summary>
    public const int TerrainSizeFieldNumber = 1;
    private int terrainSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TerrainSize {
      get { return terrainSize_; }
      set {
        terrainSize_ = value;
      }
    }

    /// <summary>Field number for the "initial_animals" field.</summary>
    public const int InitialAnimalsFieldNumber = 2;
    private int initialAnimals_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InitialAnimals {
      get { return initialAnimals_; }
      set {
        initialAnimals_ = value;
      }
    }

    /// <summary>Field number for the "initial_plants" field.</summary>
    public const int InitialPlantsFieldNumber = 3;
    private int initialPlants_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InitialPlants {
      get { return initialPlants_; }
      set {
        initialPlants_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatchConfiguration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatchConfiguration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TerrainSize != other.TerrainSize) return false;
      if (InitialAnimals != other.InitialAnimals) return false;
      if (InitialPlants != other.InitialPlants) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TerrainSize != 0) hash ^= TerrainSize.GetHashCode();
      if (InitialAnimals != 0) hash ^= InitialAnimals.GetHashCode();
      if (InitialPlants != 0) hash ^= InitialPlants.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TerrainSize != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TerrainSize);
      }
      if (InitialAnimals != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(InitialAnimals);
      }
      if (InitialPlants != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(InitialPlants);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TerrainSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TerrainSize);
      }
      if (InitialAnimals != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InitialAnimals);
      }
      if (InitialPlants != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InitialPlants);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatchConfiguration other) {
      if (other == null) {
        return;
      }
      if (other.TerrainSize != 0) {
        TerrainSize = other.TerrainSize;
      }
      if (other.InitialAnimals != 0) {
        InitialAnimals = other.InitialAnimals;
      }
      if (other.InitialPlants != 0) {
        InitialPlants = other.InitialPlants;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TerrainSize = input.ReadInt32();
            break;
          }
          case 16: {
            InitialAnimals = input.ReadInt32();
            break;
          }
          case 24: {
            InitialPlants = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RunServerRequest : pb::IMessage<RunServerRequest> {
    private static readonly pb::MessageParser<RunServerRequest> _parser = new pb::MessageParser<RunServerRequest>(() => new RunServerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RunServerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Rpc.RpcReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunServerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunServerRequest(RunServerRequest other) : this() {
      configuration_ = other.configuration_ != null ? other.configuration_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunServerRequest Clone() {
      return new RunServerRequest(this);
    }

    /// <summary>Field number for the "configuration" field.</summary>
    public const int ConfigurationFieldNumber = 1;
    private global::Net.Rpc.MatchConfiguration configuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Rpc.MatchConfiguration Configuration {
      get { return configuration_; }
      set {
        configuration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RunServerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RunServerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Configuration, other.Configuration)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (configuration_ != null) hash ^= Configuration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (configuration_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Configuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (configuration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Configuration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RunServerRequest other) {
      if (other == null) {
        return;
      }
      if (other.configuration_ != null) {
        if (configuration_ == null) {
          Configuration = new global::Net.Rpc.MatchConfiguration();
        }
        Configuration.MergeFrom(other.Configuration);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (configuration_ == null) {
              Configuration = new global::Net.Rpc.MatchConfiguration();
            }
            input.ReadMessage(Configuration);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RunServerResponse : pb::IMessage<RunServerResponse> {
    private static readonly pb::MessageParser<RunServerResponse> _parser = new pb::MessageParser<RunServerResponse>(() => new RunServerResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RunServerResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Rpc.RpcReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunServerResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunServerResponse(RunServerResponse other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunServerResponse Clone() {
      return new RunServerResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::Net.Rpc.RunServerCompletionResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Rpc.RunServerCompletionResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RunServerResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RunServerResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RunServerResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Net.Rpc.RunServerCompletionResult) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StopServerRequest : pb::IMessage<StopServerRequest> {
    private static readonly pb::MessageParser<StopServerRequest> _parser = new pb::MessageParser<StopServerRequest>(() => new StopServerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopServerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Rpc.RpcReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopServerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopServerRequest(StopServerRequest other) : this() {
      matchId_ = other.matchId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopServerRequest Clone() {
      return new StopServerRequest(this);
    }

    /// <summary>Field number for the "match_id" field.</summary>
    public const int MatchIdFieldNumber = 1;
    private string matchId_ = "";
    /// <summary>
    /// TODO: maybe enum: Stop (stop but possibility to restart), Delete (erase totally all data), ...
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MatchId {
      get { return matchId_; }
      set {
        matchId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopServerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopServerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MatchId != other.MatchId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MatchId.Length != 0) hash ^= MatchId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MatchId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MatchId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MatchId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MatchId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopServerRequest other) {
      if (other == null) {
        return;
      }
      if (other.MatchId.Length != 0) {
        MatchId = other.MatchId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MatchId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StopServerResponse : pb::IMessage<StopServerResponse> {
    private static readonly pb::MessageParser<StopServerResponse> _parser = new pb::MessageParser<StopServerResponse>(() => new StopServerResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopServerResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Rpc.RpcReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopServerResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopServerResponse(StopServerResponse other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopServerResponse Clone() {
      return new StopServerResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::Net.Rpc.StopServerCompletionResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Rpc.StopServerCompletionResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopServerResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopServerResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopServerResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Net.Rpc.StopServerCompletionResult) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnityServer : pb::IMessage<UnityServer> {
    private static readonly pb::MessageParser<UnityServer> _parser = new pb::MessageParser<UnityServer>(() => new UnityServer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnityServer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Rpc.RpcReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnityServer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnityServer(UnityServer other) : this() {
      workerId_ = other.workerId_;
      matchId_ = other.matchId_;
      configuration_ = other.configuration_ != null ? other.configuration_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnityServer Clone() {
      return new UnityServer(this);
    }

    /// <summary>Field number for the "worker_id" field.</summary>
    public const int WorkerIdFieldNumber = 1;
    private string workerId_ = "";
    /// <summary>
    /// Process id or k8s deployment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorkerId {
      get { return workerId_; }
      set {
        workerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "match_id" field.</summary>
    public const int MatchIdFieldNumber = 2;
    private string matchId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MatchId {
      get { return matchId_; }
      set {
        matchId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "configuration" field.</summary>
    public const int ConfigurationFieldNumber = 3;
    private global::Net.Rpc.MatchConfiguration configuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Rpc.MatchConfiguration Configuration {
      get { return configuration_; }
      set {
        configuration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnityServer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnityServer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorkerId != other.WorkerId) return false;
      if (MatchId != other.MatchId) return false;
      if (!object.Equals(Configuration, other.Configuration)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WorkerId.Length != 0) hash ^= WorkerId.GetHashCode();
      if (MatchId.Length != 0) hash ^= MatchId.GetHashCode();
      if (configuration_ != null) hash ^= Configuration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WorkerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WorkerId);
      }
      if (MatchId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MatchId);
      }
      if (configuration_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Configuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WorkerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkerId);
      }
      if (MatchId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MatchId);
      }
      if (configuration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Configuration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnityServer other) {
      if (other == null) {
        return;
      }
      if (other.WorkerId.Length != 0) {
        WorkerId = other.WorkerId;
      }
      if (other.MatchId.Length != 0) {
        MatchId = other.MatchId;
      }
      if (other.configuration_ != null) {
        if (configuration_ == null) {
          Configuration = new global::Net.Rpc.MatchConfiguration();
        }
        Configuration.MergeFrom(other.Configuration);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WorkerId = input.ReadString();
            break;
          }
          case 18: {
            MatchId = input.ReadString();
            break;
          }
          case 26: {
            if (configuration_ == null) {
              Configuration = new global::Net.Rpc.MatchConfiguration();
            }
            input.ReadMessage(Configuration);
            break;
          }
        }
      }
    }

  }

  public sealed partial class User : pb::IMessage<User> {
    private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<User> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Rpc.RpcReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User(User other) : this() {
      serversWorkerId_ = other.serversWorkerId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User Clone() {
      return new User(this);
    }

    /// <summary>Field number for the "servers_worker_id" field.</summary>
    public const int ServersWorkerIdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_serversWorkerId_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> serversWorkerId_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ServersWorkerId {
      get { return serversWorkerId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as User);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(User other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!serversWorkerId_.Equals(other.serversWorkerId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= serversWorkerId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      serversWorkerId_.WriteTo(output, _repeated_serversWorkerId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += serversWorkerId_.CalculateSize(_repeated_serversWorkerId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(User other) {
      if (other == null) {
        return;
      }
      serversWorkerId_.Add(other.serversWorkerId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            serversWorkerId_.AddEntriesFrom(input, _repeated_serversWorkerId_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
