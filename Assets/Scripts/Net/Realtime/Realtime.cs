// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/realtime.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Net.Realtime {

  /// <summary>Holder for reflection information generated from Protobuf/realtime.proto</summary>
  public static partial class RealtimeReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/realtime.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RealtimeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdQcm90b2J1Zi9yZWFsdGltZS5wcm90bxIIcmVhbHRpbWUaIVByb3RvYnVm",
            "L1Byb3RvbWV0cnkvdmVjdG9yMy5wcm90bxokUHJvdG9idWYvUHJvdG9tZXRy",
            "eS9xdWF0ZXJuaW9uLnByb3RvIqUDCgZQYWNrZXQSQAoPdXBkYXRlX3Bvc2l0",
            "aW9uGAEgASgLMiUucmVhbHRpbWUuUGFja2V0LlVwZGF0ZVBvc2l0aW9uUGFj",
            "a2V0SAASQAoPdXBkYXRlX3JvdGF0aW9uGAIgASgLMiUucmVhbHRpbWUuUGFj",
            "a2V0LlVwZGF0ZVJvdGF0aW9uUGFja2V0SAASPgoOZGVzdHJveV9vYmplY3QY",
            "AyABKAsyJC5yZWFsdGltZS5QYWNrZXQuRGVzdHJveU9iamVjdFBhY2tldEgA",
            "GlAKFFVwZGF0ZVBvc2l0aW9uUGFja2V0EhEKCW9iamVjdF9pZBgBIAEoBBIl",
            "Cghwb3NpdGlvbhgCIAEoCzITLnByb3RvbWV0cnkuVmVjdG9yMxpTChRVcGRh",
            "dGVSb3RhdGlvblBhY2tldBIRCglvYmplY3RfaWQYASABKAQSKAoIcm90YXRp",
            "b24YAiABKAsyFi5wcm90b21ldHJ5LlF1YXRlcm5pb24aKAoTRGVzdHJveU9i",
            "amVjdFBhY2tldBIRCglvYmplY3RfaWQYASABKARCBgoEdHlwZUIPqgIMTmV0",
            "LlJlYWx0aW1lYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Net.Realtime.Protometry.Vector3.Vector3Reflection.Descriptor, global::Net.Realtime.Protometry.Vector3.QuaternionReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Realtime.Packet), global::Net.Realtime.Packet.Parser, new[]{ "UpdatePosition", "UpdateRotation", "DestroyObject" }, new[]{ "Type" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Net.Realtime.Packet.Types.UpdatePositionPacket), global::Net.Realtime.Packet.Types.UpdatePositionPacket.Parser, new[]{ "ObjectId", "Position" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Realtime.Packet.Types.UpdateRotationPacket), global::Net.Realtime.Packet.Types.UpdateRotationPacket.Parser, new[]{ "ObjectId", "Rotation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Realtime.Packet.Types.DestroyObjectPacket), global::Net.Realtime.Packet.Types.DestroyObjectPacket.Parser, new[]{ "ObjectId" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Packet : pb::IMessage<Packet> {
    private static readonly pb::MessageParser<Packet> _parser = new pb::MessageParser<Packet>(() => new Packet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Packet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Realtime.RealtimeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet(Packet other) : this() {
      switch (other.TypeCase) {
        case TypeOneofCase.UpdatePosition:
          UpdatePosition = other.UpdatePosition.Clone();
          break;
        case TypeOneofCase.UpdateRotation:
          UpdateRotation = other.UpdateRotation.Clone();
          break;
        case TypeOneofCase.DestroyObject:
          DestroyObject = other.DestroyObject.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet Clone() {
      return new Packet(this);
    }

    /// <summary>Field number for the "update_position" field.</summary>
    public const int UpdatePositionFieldNumber = 1;
    /// <summary>
    /// General physical objects
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Realtime.Packet.Types.UpdatePositionPacket UpdatePosition {
      get { return typeCase_ == TypeOneofCase.UpdatePosition ? (global::Net.Realtime.Packet.Types.UpdatePositionPacket) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.UpdatePosition;
      }
    }

    /// <summary>Field number for the "update_rotation" field.</summary>
    public const int UpdateRotationFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Realtime.Packet.Types.UpdateRotationPacket UpdateRotation {
      get { return typeCase_ == TypeOneofCase.UpdateRotation ? (global::Net.Realtime.Packet.Types.UpdateRotationPacket) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.UpdateRotation;
      }
    }

    /// <summary>Field number for the "destroy_object" field.</summary>
    public const int DestroyObjectFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Realtime.Packet.Types.DestroyObjectPacket DestroyObject {
      get { return typeCase_ == TypeOneofCase.DestroyObject ? (global::Net.Realtime.Packet.Types.DestroyObjectPacket) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.DestroyObject;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      UpdatePosition = 1,
      UpdateRotation = 2,
      DestroyObject = 3,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Packet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Packet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UpdatePosition, other.UpdatePosition)) return false;
      if (!object.Equals(UpdateRotation, other.UpdateRotation)) return false;
      if (!object.Equals(DestroyObject, other.DestroyObject)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.UpdatePosition) hash ^= UpdatePosition.GetHashCode();
      if (typeCase_ == TypeOneofCase.UpdateRotation) hash ^= UpdateRotation.GetHashCode();
      if (typeCase_ == TypeOneofCase.DestroyObject) hash ^= DestroyObject.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (typeCase_ == TypeOneofCase.UpdatePosition) {
        output.WriteRawTag(10);
        output.WriteMessage(UpdatePosition);
      }
      if (typeCase_ == TypeOneofCase.UpdateRotation) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateRotation);
      }
      if (typeCase_ == TypeOneofCase.DestroyObject) {
        output.WriteRawTag(26);
        output.WriteMessage(DestroyObject);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.UpdatePosition) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdatePosition);
      }
      if (typeCase_ == TypeOneofCase.UpdateRotation) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateRotation);
      }
      if (typeCase_ == TypeOneofCase.DestroyObject) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DestroyObject);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Packet other) {
      if (other == null) {
        return;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.UpdatePosition:
          if (UpdatePosition == null) {
            UpdatePosition = new global::Net.Realtime.Packet.Types.UpdatePositionPacket();
          }
          UpdatePosition.MergeFrom(other.UpdatePosition);
          break;
        case TypeOneofCase.UpdateRotation:
          if (UpdateRotation == null) {
            UpdateRotation = new global::Net.Realtime.Packet.Types.UpdateRotationPacket();
          }
          UpdateRotation.MergeFrom(other.UpdateRotation);
          break;
        case TypeOneofCase.DestroyObject:
          if (DestroyObject == null) {
            DestroyObject = new global::Net.Realtime.Packet.Types.DestroyObjectPacket();
          }
          DestroyObject.MergeFrom(other.DestroyObject);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Net.Realtime.Packet.Types.UpdatePositionPacket subBuilder = new global::Net.Realtime.Packet.Types.UpdatePositionPacket();
            if (typeCase_ == TypeOneofCase.UpdatePosition) {
              subBuilder.MergeFrom(UpdatePosition);
            }
            input.ReadMessage(subBuilder);
            UpdatePosition = subBuilder;
            break;
          }
          case 18: {
            global::Net.Realtime.Packet.Types.UpdateRotationPacket subBuilder = new global::Net.Realtime.Packet.Types.UpdateRotationPacket();
            if (typeCase_ == TypeOneofCase.UpdateRotation) {
              subBuilder.MergeFrom(UpdateRotation);
            }
            input.ReadMessage(subBuilder);
            UpdateRotation = subBuilder;
            break;
          }
          case 26: {
            global::Net.Realtime.Packet.Types.DestroyObjectPacket subBuilder = new global::Net.Realtime.Packet.Types.DestroyObjectPacket();
            if (typeCase_ == TypeOneofCase.DestroyObject) {
              subBuilder.MergeFrom(DestroyObject);
            }
            input.ReadMessage(subBuilder);
            DestroyObject = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Packet message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class UpdatePositionPacket : pb::IMessage<UpdatePositionPacket> {
        private static readonly pb::MessageParser<UpdatePositionPacket> _parser = new pb::MessageParser<UpdatePositionPacket>(() => new UpdatePositionPacket());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UpdatePositionPacket> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Net.Realtime.Packet.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdatePositionPacket() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdatePositionPacket(UpdatePositionPacket other) : this() {
          objectId_ = other.objectId_;
          position_ = other.position_ != null ? other.position_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdatePositionPacket Clone() {
          return new UpdatePositionPacket(this);
        }

        /// <summary>Field number for the "object_id" field.</summary>
        public const int ObjectIdFieldNumber = 1;
        private ulong objectId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ObjectId {
          get { return objectId_; }
          set {
            objectId_ = value;
          }
        }

        /// <summary>Field number for the "position" field.</summary>
        public const int PositionFieldNumber = 2;
        private global::Net.Realtime.Protometry.Vector3.Vector3 position_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Net.Realtime.Protometry.Vector3.Vector3 Position {
          get { return position_; }
          set {
            position_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UpdatePositionPacket);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UpdatePositionPacket other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ObjectId != other.ObjectId) return false;
          if (!object.Equals(Position, other.Position)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ObjectId != 0UL) hash ^= ObjectId.GetHashCode();
          if (position_ != null) hash ^= Position.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ObjectId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ObjectId);
          }
          if (position_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Position);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ObjectId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ObjectId);
          }
          if (position_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UpdatePositionPacket other) {
          if (other == null) {
            return;
          }
          if (other.ObjectId != 0UL) {
            ObjectId = other.ObjectId;
          }
          if (other.position_ != null) {
            if (position_ == null) {
              Position = new global::Net.Realtime.Protometry.Vector3.Vector3();
            }
            Position.MergeFrom(other.Position);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ObjectId = input.ReadUInt64();
                break;
              }
              case 18: {
                if (position_ == null) {
                  Position = new global::Net.Realtime.Protometry.Vector3.Vector3();
                }
                input.ReadMessage(Position);
                break;
              }
            }
          }
        }

      }

      public sealed partial class UpdateRotationPacket : pb::IMessage<UpdateRotationPacket> {
        private static readonly pb::MessageParser<UpdateRotationPacket> _parser = new pb::MessageParser<UpdateRotationPacket>(() => new UpdateRotationPacket());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UpdateRotationPacket> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Net.Realtime.Packet.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateRotationPacket() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateRotationPacket(UpdateRotationPacket other) : this() {
          objectId_ = other.objectId_;
          rotation_ = other.rotation_ != null ? other.rotation_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateRotationPacket Clone() {
          return new UpdateRotationPacket(this);
        }

        /// <summary>Field number for the "object_id" field.</summary>
        public const int ObjectIdFieldNumber = 1;
        private ulong objectId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ObjectId {
          get { return objectId_; }
          set {
            objectId_ = value;
          }
        }

        /// <summary>Field number for the "rotation" field.</summary>
        public const int RotationFieldNumber = 2;
        private global::Net.Realtime.Protometry.Vector3.Quaternion rotation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Net.Realtime.Protometry.Vector3.Quaternion Rotation {
          get { return rotation_; }
          set {
            rotation_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UpdateRotationPacket);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UpdateRotationPacket other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ObjectId != other.ObjectId) return false;
          if (!object.Equals(Rotation, other.Rotation)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ObjectId != 0UL) hash ^= ObjectId.GetHashCode();
          if (rotation_ != null) hash ^= Rotation.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ObjectId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ObjectId);
          }
          if (rotation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Rotation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ObjectId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ObjectId);
          }
          if (rotation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UpdateRotationPacket other) {
          if (other == null) {
            return;
          }
          if (other.ObjectId != 0UL) {
            ObjectId = other.ObjectId;
          }
          if (other.rotation_ != null) {
            if (rotation_ == null) {
              Rotation = new global::Net.Realtime.Protometry.Vector3.Quaternion();
            }
            Rotation.MergeFrom(other.Rotation);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ObjectId = input.ReadUInt64();
                break;
              }
              case 18: {
                if (rotation_ == null) {
                  Rotation = new global::Net.Realtime.Protometry.Vector3.Quaternion();
                }
                input.ReadMessage(Rotation);
                break;
              }
            }
          }
        }

      }

      public sealed partial class DestroyObjectPacket : pb::IMessage<DestroyObjectPacket> {
        private static readonly pb::MessageParser<DestroyObjectPacket> _parser = new pb::MessageParser<DestroyObjectPacket>(() => new DestroyObjectPacket());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DestroyObjectPacket> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Net.Realtime.Packet.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DestroyObjectPacket() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DestroyObjectPacket(DestroyObjectPacket other) : this() {
          objectId_ = other.objectId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DestroyObjectPacket Clone() {
          return new DestroyObjectPacket(this);
        }

        /// <summary>Field number for the "object_id" field.</summary>
        public const int ObjectIdFieldNumber = 1;
        private ulong objectId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ObjectId {
          get { return objectId_; }
          set {
            objectId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DestroyObjectPacket);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DestroyObjectPacket other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ObjectId != other.ObjectId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ObjectId != 0UL) hash ^= ObjectId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ObjectId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ObjectId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ObjectId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ObjectId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DestroyObjectPacket other) {
          if (other == null) {
            return;
          }
          if (other.ObjectId != 0UL) {
            ObjectId = other.ObjectId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ObjectId = input.ReadUInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
