syntax = "proto3";

package realtime;

import "Protobuf/vector3.proto";
import "Protobuf/quaternion.proto";
option csharp_namespace = "Net.Realtime";


message Packet {
    string sender_id = 1;
    bool is_server = 2;
    oneof type {
        // General physical objects
        UpdateTransformPacket update_transform = 3;
        DestroyPacket destroy = 4;

        // Evolution
        SpawnPacket spawn = 5;
        UpdateMeme meme = 6;
        

        // Player
        MatchInformationPacket match_information = 7;
        InitializedPacket initialized = 8;
    }

    // General purpose transform update typically shared by several different types of objects
    message UpdateTransformPacket {
        Transform object_transform = 1;
    }

    message DestroyPacket {
        uint64 id = 1;
    }

    message SpawnPacket {
        oneof type {
            Transform any = 1; // Any object, no special behaviour
            TreeObject tree = 2;
            AnimalObject animal = 3;
            // TODO: other ?
        }
        message TreeObject {
            Transform object_transform = 1;
            // TODO: other stats
        }
        message AnimalObject {
            Transform object_transform = 1;
            // TODO: other stats
        }
    }

    message UpdateMeme {
        uint64 id = 1;
        string meme_name = 2; // Not really efficient but ok
    }

    // Server sending some information on the current state before starting
    message MatchInformationPacket {
        // TODO: some state config https://heroiclabs.com/docs/tutorial-remote-configuration/
        // like map size, initial evolution parameters ...
        int32 seed = 1;
    }

    // Client notifying being ready to handle gameplay
    message InitializedPacket {
    }
}

message Transform { // TODO: is it worthwhile to add like "owner_id" ... ?
    uint64 id = 1;
    Vector3 position = 2;
    Quaternion rotation = 3;
}