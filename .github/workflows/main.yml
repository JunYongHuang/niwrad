name: Build project

on:
  pull_request: {}
  push: { branches: [master] }

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  nakama:
    strategy:
      matrix:
        go-version: [1.13.x, 1.14.x]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Test go code
        run: go test ./...
  buildForSomePlatforms:
    name: Build for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - .
        unityVersion:
          - 2019.4.0f1
        targetPlatform:
        #   - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
        #   - StandaloneWindows # Build a Windows standalone.
        #  - StandaloneWindows64 # Build a Windows 64-bit standalone.
        #  - StandaloneLinux64 # Build a Linux 64-bit standalone.
        #  - iOS # Build an iOS player.
        #  - Android # Build an Android .apk standalone app.
          - WebGL # WebGL.
        #   - WSAPlayer # Build an Windows Store Apps player.
        #   - PS4 # Build a PS4 Standalone.
        #   - XboxOne # Build a Xbox One Standalone.
        #   - tvOS # Build to Apple's tvOS platform.
        #   - Switch # Build a Nintendo Switch player.
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/cache@v1.1.0
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-
            Library-
      - uses: webbertakken/unity-builder@v1.0
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          buildsPath: build
      - uses: actions/upload-artifact@v1
        with:
          name: Build
          path: build
  DeployPages:
    runs-on: ubuntu-latest
    needs: buildForSomePlatforms
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: Build
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v2
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: Build/WebGL/WebGL # The folder the action should deploy.

